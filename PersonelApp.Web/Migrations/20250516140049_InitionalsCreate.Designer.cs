// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PersonelApp.Web.Data;

#nullable disable

namespace PersonelApp.Web.Migrations
{
    [DbContext(typeof(PersonelContext))]
    [Migration("20250516140049_InitionalsCreate")]
    partial class InitionalsCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AbdBolum", b =>
                {
                    b.Property<int>("AbdListAbdId")
                        .HasColumnType("int");

                    b.Property<int>("BolumListBolumId")
                        .HasColumnType("int");

                    b.HasKey("AbdListAbdId", "BolumListBolumId");

                    b.HasIndex("BolumListBolumId");

                    b.ToTable("AbdBolum");
                });

            modelBuilder.Entity("BolumFakulte", b =>
                {
                    b.Property<int>("BolumListBolumId")
                        .HasColumnType("int");

                    b.Property<int>("FakulteListFakulteId")
                        .HasColumnType("int");

                    b.HasKey("BolumListBolumId", "FakulteListFakulteId");

                    b.HasIndex("FakulteListFakulteId");

                    b.ToTable("BolumFakulte");
                });

            modelBuilder.Entity("PersonelApp.Web.Entity.Abd", b =>
                {
                    b.Property<int>("AbdId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AbdId"));

                    b.Property<string>("AbdName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AbdId");

                    b.ToTable("Abds");
                });

            modelBuilder.Entity("PersonelApp.Web.Entity.Bolum", b =>
                {
                    b.Property<int>("BolumId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BolumId"));

                    b.Property<string>("BolumName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("BolumId");

                    b.ToTable("Bolums");
                });

            modelBuilder.Entity("PersonelApp.Web.Entity.Fakulte", b =>
                {
                    b.Property<int>("FakulteId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("FakulteId"));

                    b.Property<string>("FakulteName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FakulteId");

                    b.ToTable("Fakultes");
                });

            modelBuilder.Entity("PersonelApp.Web.Entity.IzinBilgisi", b =>
                {
                    b.Property<int>("IzinBilgisiId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IzinBilgisiId"));

                    b.Property<DateTime>("BaslangicTarihi")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("BitisTarihi")
                        .HasColumnType("datetime2");

                    b.Property<int>("Kullanilanizin")
                        .HasColumnType("int");

                    b.Property<int>("PersonelId")
                        .HasColumnType("int");

                    b.HasKey("IzinBilgisiId");

                    b.ToTable("Izinler");
                });

            modelBuilder.Entity("PersonelApp.Web.Entity.Personel", b =>
                {
                    b.Property<int>("PersonelId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PersonelId"));

                    b.Property<int>("AbdId")
                        .HasColumnType("int");

                    b.Property<string>("Ad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("BolumId")
                        .HasColumnType("int");

                    b.Property<int>("BuYıl")
                        .HasColumnType("int");

                    b.Property<int>("FakulteId")
                        .HasColumnType("int");

                    b.Property<int>("GecenYıl")
                        .HasColumnType("int");

                    b.Property<long>("KimlikNo")
                        .HasColumnType("bigint");

                    b.Property<string>("Soyad")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateOnly>("Zaman")
                        .HasColumnType("date");

                    b.HasKey("PersonelId");

                    b.HasIndex("AbdId");

                    b.HasIndex("BolumId");

                    b.HasIndex("FakulteId");

                    b.ToTable("Personels");
                });

            modelBuilder.Entity("AbdBolum", b =>
                {
                    b.HasOne("PersonelApp.Web.Entity.Abd", null)
                        .WithMany()
                        .HasForeignKey("AbdListAbdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonelApp.Web.Entity.Bolum", null)
                        .WithMany()
                        .HasForeignKey("BolumListBolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BolumFakulte", b =>
                {
                    b.HasOne("PersonelApp.Web.Entity.Bolum", null)
                        .WithMany()
                        .HasForeignKey("BolumListBolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonelApp.Web.Entity.Fakulte", null)
                        .WithMany()
                        .HasForeignKey("FakulteListFakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PersonelApp.Web.Entity.Personel", b =>
                {
                    b.HasOne("PersonelApp.Web.Entity.Abd", "Abd")
                        .WithMany()
                        .HasForeignKey("AbdId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonelApp.Web.Entity.Bolum", "Bolum")
                        .WithMany()
                        .HasForeignKey("BolumId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PersonelApp.Web.Entity.Fakulte", "Fakulte")
                        .WithMany()
                        .HasForeignKey("FakulteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Abd");

                    b.Navigation("Bolum");

                    b.Navigation("Fakulte");
                });
#pragma warning restore 612, 618
        }
    }
}
